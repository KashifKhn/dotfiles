let mapleader = " "

" Clear search highlights with Escape in normal mode
nnoremap <esc> :nohlsearch<cr>

" Exit insert mode by typing 'jj'
inoremap jj <esc>

" Enable relative line numbers
set relativenumber
set scrolloff=5
set cursorline

" Copy to global clipboard
nnoremap <C-c> "+y
vnoremap <C-c> "+y

nnoremap p "+p
nnoremap P "+P

" Window navigation
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k

" JetBrains Rider-specific mappings
" Toggle project tool window with leader + e
nnoremap <leader>e :action ViewProjectToolWindow<CR>
" Close active tool window
nnoremap <leader>ee :action HideActiveWindow<CR>

" File navigation
nnoremap <leader>g :action GotoFile<CR>
nnoremap <leader>p :action RecentFiles<CR>

" Code navigation
nnoremap gd :action GotoDeclaration<CR>
nnoremap gr :action FindUsages<CR>
nnoremap gi :action GotoImplementation<CR>
nnoremap <leader>d :action GotoTypeDeclaration<CR>
nnoremap <leader>ds :action FileStructurePopup<CR>
nnoremap <leader>ws :action TypeHierarchy<CR>

" Refactoring and actions
nnoremap <leader>rn :action RenameElement<CR>
nnoremap <leader>ch :action QuickDocumentation<CR>
nnoremap <leader>ca :action ShowIntentionActions<CR>
nnoremap <leader>cg :action Generate<CR>
nnoremap <leader>cd :action ShowErrorsInProject<CR>
nnoremap <leader>cf :action ReformatCode<CR>
nnoremap <leader>cr :action RenameElement<CR>

" Searching
nnoremap <leader>sf :action SearchEverywhere<CR>
nnoremap <leader>sw :action FindWordAtCaret<CR>
nnoremap <leader>sg :action FindInPath<CR>
nnoremap <leader>sd :action ShowErrorsInFile<CR>
nnoremap <leader>sr :action RecentChanges<CR>
nnoremap <leader>s. :action RecentFiles<CR>

" Switcher (quick panel for open files)
nnoremap <leader><leader> :action Switcher<CR>

" Code completion
nnoremap <C-n> :action NextTemplateParameter<CR>
nnoremap <C-p> :action PreviousTemplateParameter<CR>
nnoremap <C-Space> :action CodeCompletion<CR>
" nnoremap <C-y> :action ChooseLookupItemReplace<CR>
nnoremap <C-y> :action EditorChooseLookupItem<CR>

" Comment/uncomment current line with gcc
nnoremap gcc :action CommentByLineComment<CR>

" Comment/uncomment selection with gc in visual mode
vnoremap gc :action CommentGroup<CR>
